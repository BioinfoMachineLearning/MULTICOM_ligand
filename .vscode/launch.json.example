{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Python: Current File",
            "type": "debugpy",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--input_dir", "data/casp16_set/superligand_targets/L4000_exper/L4000_prepared",
                "--output_script_dir", "affinity_prediction_scripts/",
                "--auxiliary_estimation_input_dir", "data/test_cases/casp16/superligand_affinity_predictions/L4000_exper",
                "--output_prediction_filepath", "data/test_cases/casp16/superligand_affinity_predictions/L4000_exper/LG207_L4000.affinities",
                "--skip_existing",
            ]
        },
        {
            "name": "diffdock_inference.py",
            "type": "debugpy",
            "request": "launch",
            "program": "src/models/diffdock_inference.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "cuda_device_index=1",
                // "python_exec_path=forks/DiffDock/DiffDock/bin/python3",
                // "diffdock_exec_dir=forks/DiffDock",
                // "dataset=posebusters_benchmark",
                // "input_csv_path=forks/DiffDock/inference/diffdock_${dataset}_inputs.csv",
                "input_csv_path=forks/DiffDock/inference/diffdock_ensemble_inputs.csv",
                "output_dir=forks/DiffDock/inference/diffdock_ensemble_output",
                // "input_data_dir=forks/DiffDock/inference/diffdock_${dataset}_inputs",
                // "output_dir=forks/DiffDock/inference/diffdock_${dataset}_output",
                "inference_steps=20",
                "samples_per_complex=40",
                "batch_size=10",
                "actual_steps=19",
                "no_final_step_noise=true",
            ]
        },
        {
            "name": "fabind_inference.py",
            "type": "debugpy",
            "request": "launch",
            "program": "src/models/fabind_inference.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "cuda_device_index=1",
                // "python_exec_path=forks/FABind/FABind/bin/python3",
                // "fabind_exec_dir=forks/FABind/fabind",
                "dataset=astex_diverse",
                // "input_csv_path=forks/FABind/inference/fabind_${dataset}_inputs.csv",
                // "input_data_dir=forks/FABind/inference/fabind_${dataset}_inputs",
                // "num_threads=1",
                // "skip_existing=false",
                // "save_pt_dir=forks/FABind/inference/fabind_${dataset}_temp_files",
                // "save_mols_dir=forks/FABind/inference/fabind_${dataset}_temp_files/mol",
                // "ckpt_path=forks/FABind/ckpt/best_model.bin",
                // "output_dir=forks/FABind/inference/fabind_${dataset}_output",
            ]
        },
        {
            "name": "dynamicbind_inference.py",
            "type": "debugpy",
            "request": "launch",
            "program": "src/models/dynamicbind_inference.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "cuda_device_index=1",
                // "python_exec_path=forks/DynamicBind/DynamicBind/bin/python3",
                // "dynamicbind_exec_dir=forks/DynamicBind",
                // "dataset=astex_diverse",
                "input_data_dir=forks/DynamicBind/inference/ensemble_esmfold_structures",
                "input_ligand_csv_dir=forks/DynamicBind/inference/dynamicbind_ensemble_inputs",
                // "input_data_dir=forks/DynamicBind/inference/dynamicbind_${dataset}_inputs",
                // "input_ligand_csv_dir=forks/DynamicBind/inference/dynamicbind_${dataset}_inputs",
                "samples_per_complex=10",
                "savings_per_complex=1",
                "inference_steps=20",
                "header=ensemble_debugging",
                "num_workers=1",
                "skip_existing=false",
            ]
        },
        {
            "name": "flowdock_inference.py",
            "type": "debugpy",
            "request": "launch",
            "program": "src/models/flowdock_inference.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "python_exec_path=/bmlfast/multicom_ligand/PoseBench/forks/FlowDock/FlowDock/bin/python3",
                "flowdock_exec_dir=/bmlfast/multicom_ligand/PoseBench/forks/FlowDock",
                "input_csv_path=/bmlfast/multicom_ligand/PoseBench/forks/FlowDock/inference/flowdock_ensemble_inputs.csv",
                "skip_existing=true",
                "sampling_task=batched_structure_sampling",
                "sample_id=0",
                // "input_ligand='data/test_cases/casp15/top_neuralplexer_ensemble_casp15_dry_run_predictions/H1172v4/neuralplexer_rank1_rmsd0.00e+00_plddt0.5094923_pbvalid=False.sdf'",
                // "input_receptor='data/test_cases/casp15/top_neuralplexer_ensemble_casp15_dry_run_predictions/H1172v4/neuralplexer_rank1_rmsd0.00e+00_plddt0.5094923.pdb'",
                // "input_template='data/ensemble_proteins/H1172v4.pdb'",
                "cuda_device_index=0",
                "model_checkpoint=/bmlfast/multicom_ligand/PoseBench/forks/FlowDock/checkpoints/best_ep_d8ef2baz_epoch_189.ckpt",
                "out_path=/bmlfast/multicom_ligand/PoseBench/forks/FlowDock/inference/flowdock_ensemble_outputs",
                "n_samples=1",
                "chunk_size=1",
                "num_steps=40",
                "latent_model=null",
                "sampler=VDODE",
                "sampler_eta=1.0",
                "start_time=1.0",
                "max_chain_encoding_k=-1",
                "exact_prior=false",
                "discard_ligand=false",
                "discard_sdf_coords=false",
                "detect_covalent=false",
                "use_template=true",
                "separate_pdb=true",
                "rank_outputs_by_confidence=true",
                "plddt_ranking_type=ligand",
                "visualize_sample_trajectories=false",
                "auxiliary_estimation_only=true",
                "auxiliary_estimation_input_dir=data/test_cases/casp16/archived/R1262_top_consensus_ensemble_predictions_1_top_3/R1262",
                "esmfold_chunk_size=null",
            ]
        },
        {
            "name": "rfaa_inference.py",
            "type": "debugpy",
            "request": "launch",
            "program": "src/models/rfaa_inference.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "dataset=posebusters_benchmark",
                "max_cycles=4",
                "run_inference_directly=true",
                // "inference_config_name=T1118v1_rfaa_inference.yaml",
                // "inference_dir_name=T1118v1_for_debugging"
            ]
        },
        {
            "name": "vina_inference.py",
            "type": "debugpy",
            "request": "launch",
            "program": "src/models/vina_inference.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "dataset=casp15",
                "method=diffdock",
                "skip_existing=false",
            ]
        },
        {
            "name": "minimize_energy.py",
            "type": "debugpy",
            "request": "launch",
            "program": "src/models/minimize_energy.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "protein_file=data/test_cases/7MYU_ZR7/7MYU_ZR7_protein.pdb",
                "ligand_file=data/test_cases/7MYU_ZR7/7MYU_ZR7_prediction.sdf",
                "output_file=7MYU_ZR7_prediction_minimized.sdf",
                // "temp_dir=.",
                // "add_solvent=true",
                // "name=7MYU_ZR7",
                // "prep_only=true",
                // "platform=CUDA",
                // "log_level=WARNING",
            ]
        },
        {
            "name": "inference_relaxation.py",
            "type": "debugpy",
            "request": "launch",
            "program": "src/models/inference_relaxation.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "method=diffdock",
                "vina_binding_site_method=diffdock",
                "dataset=posebusters_benchmark",
                "remove_initial_protein_hydrogens=true",
                "assign_partial_charges_manually=true",
                "skip_existing=true",
                "num_processes=1",
                // "temp_dir=.",
                // "add_solvent=true",
                // "name=null",
                // "prep_only=true",
                // "platform=CUDA",
                "cuda_device_index=0",
                // "log_level=INFO",
                // "protein_dir=null",
                // "ligand_dir=null",
                // "output_dir=null",
                // "relax_protein=true",
                "cache_files=false",
            ]
        },
        {
            "name": "complex_alignment.py",
            "type": "debugpy",
            "request": "launch",
            "program": "src/analysis/complex_alignment.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "method=neuralplexer",
                "dataset=casp15",
                // "rank_to_align=1",
                "aligned_filename_postfix='_aligned'",
                "force_process=true",
            ]
        },
        {
            "name": "inference_analysis.py",
            "type": "debugpy",
            "request": "launch",
            "program": "src/analysis/inference_analysis.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                // "full_report=false",
                "method=ensemble",
                // "vina_binding_site_method=neuralplexer",
                "dataset=casp15",
                "ensemble_ranking_method=consensus",
                // "input_csv_path=forks/FABind/inference/fabind_${dataset}_inputs.csv",
                // "input_data_dir=forks/FABind/inference/fabind_${dataset}_inputs",
                // "output_dir=forks/FABind/inference/fabind_${dataset}_output",
                // "evaluate_rmsd_only=true"
            ]
        },
        {
            "name": "inference_analysis_casp.py",
            "type": "debugpy",
            "request": "launch",
            "program": "src/analysis/inference_analysis_casp.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "python_exec_path=casp15_ligand_scoring/bin/python3",
                "method=neuralplexer",
                // "vina_binding_site_method=neuralplexer",
                "dataset=casp15",
                // "ensemble_ranking_method=consensus",
                "predictions_dir=data/test_cases/casp15/top_neuralplexer_ensemble_casp15_dry_run_predictions_for_scoring",
                "dataset_dir=data/casp15_set",
                "targets=[H1172v4]",
                // "fault_tolerant=true",
                // "skip_existing=true",
                "score_relaxed_structures=false",
                // "repeat_index=1",
            ]
        },
        {
            "name": "ensemble_generation.py",
            "type": "debugpy",
            "request": "launch",
            "program": "src/models/ensemble_generation.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                // "ensemble_methods=[diffdock, dynamicbind, neuralplexer, rfaa]",
                // "ensemble_methods=[flowdock]",
                "ensemble_methods=[rfaa]",
                // "vina_binding_site_methods=[diffdock]",
                // "generate_vina_scripts=false",
                // "rank_single_method_intrinsically=true",
                // "output_bash_file_dir=ensemble_generation_scripts",
                "input_csv_filepath=data/test_cases/casp16/R1263v1_ensemble_inputs.csv",
                // "temp_protein_dir=data/ensemble_proteins",
                // "input_dir=forks/NeuralPLexer/inference/neuralplexer_ensemble_outputs",
                "output_dir=data/test_cases/casp16/R1263v1_top_consensus_ensemble_predictions_1_top_3",
                "skip_existing=false",
                // "relax_method_ligands_pre_ranking=false",
                "relax_method_ligands_post_ranking=false",
                // "relax_remove_initial_protein_hydrogens=false",
                // "relax_model_ions=true",
                // "relax_assign_partial_charges_manually=false",
                "export_file_format=casp16",
                "export_top_n=2",
                "casp_author=207",
                "casp_registration_code='3665-2823-5272'",
                "casp_method='MULTICOM_ligand'",
                "combine_casp_output_files=true",
                "superligand_inputs=false",
                "rerank_clashing_predictions=true",
                "rerank_multi_ligand_predictions=true",
                // "generate_hpc_scripts=false",
                // "cuda_device_index=0",
                "max_method_predictions=100",
                "method_top_n_to_select=3",
                "resume=true",
                "ensemble_benchmarking=false",
                // "ensemble_benchmarking_dataset=casp15",
                // "ensemble_ranking_method=consensus",
                "flowdock_n_samples=1",
                "flowdock_chunk_size=1",
                "flowdock_discard_sdf_coords=false",
                "flowdock_auxiliary_estimation_only=true",
                "flowdock_auxiliary_estimation_input_dir=data/test_cases/casp16/R1263v1_top_consensus_ensemble_predictions_1_top_3/",
            ]
        },
        {
            "name": "(superligands) ensemble_generation.py",
            "type": "debugpy",
            "request": "launch",
            "program": "src/models/ensemble_generation.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "ensemble_methods=[diffdock, dynamicbind, neuralplexer, rfaa]",
                // "ensemble_methods=[flowdock]",
                // "vina_binding_site_methods=[diffdock]",
                // "generate_vina_scripts=false",
                // "rank_single_method_intrinsically=true",
                // "output_bash_file_dir=ensemble_generation_scripts",
                "input_csv_filepath=data/test_cases/casp16/L5000_ensemble_superligand_inputs.csv",
                // "temp_protein_dir=data/ensemble_proteins",
                // "input_dir=forks/NeuralPLexer/inference/neuralplexer_ensemble_outputs",
                "output_dir=data/test_cases/casp16/L5000_top_consensus_ensemble_predictions_1_top_3",
                "skip_existing=false",
                // "relax_method_ligands_pre_ranking=false",
                "relax_method_ligands_post_ranking=false",
                // "relax_remove_initial_protein_hydrogens=false",
                // "relax_model_ions=true",
                // "relax_assign_partial_charges_manually=false",
                "export_file_format=casp16",
                "export_top_n=5",
                "casp_author=207",
                "casp_registration_code='3665-2823-5272'",
                "casp_method='MULTICOM_ligand'",
                "combine_casp_output_files=true",
                "superligand_inputs=true",
                // "generate_hpc_scripts=false",
                // "cuda_device_index=0",
                "max_method_predictions=100",
                "method_top_n_to_select=3",
                "resume=true",
                "diffdock_validate_target_names=false",
                "ensemble_benchmarking=false",
                // "ensemble_benchmarking_dataset=casp15",
                // "ensemble_ranking_method=consensus",
                // "dynamicbind_batch_size=1",
                "flowdock_n_samples=1",
                "flowdock_chunk_size=1",
                "flowdock_discard_sdf_coords=false",
                "flowdock_auxiliary_estimation_only=true",
                "flowdock_auxiliary_estimation_input_dir=data/test_cases/casp16/L5000_top_consensus_ensemble_predictions_1_top_3/",
            ]
        },
        {
            "name": "rfaa_output_extraction.py",
            "type": "debugpy",
            "request": "launch",
            "program": "src/data/rfaa_output_extraction.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "dataset=ensemble",
                "complex_filepath=forks/RoseTTAFold-All-Atom/prediction_outputs/ensemble_1/R1264v1/R1264v1.pdb",
                "complex_id=R1264v1",
                "ligand_smiles='NC(=O)c3ncn(c2cnc1ncccc1c2)c3N.[Mg+2]'",
                "output_dir=forks/RoseTTAFold-All-Atom/inference/rfaa_ensemble_outputs/"
            ]
        },
        {
            "name": "execute_casp16_ensemble_generation_strategy.py",
            "type": "debugpy",
            "request": "launch",
            "program": "scripts/execute_casp16_ensemble_generation_strategy.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--dry_run"
            ]
        },
    ]
}
